Este documento explica o que foi feito para as Partes 1 e 2 do teste. Basicamente a análise exploratória foi dividida em três fases. Na primeira é realizada a leitura e o carregamento dos dados contidos nos arquivos csv do MovieLens. Nesta etapa, apenas os arquivos movies e ratings foram lidos.

Na segunda fase, uma análise estatística básica é feita com os dados. Informações de total de filmes, total de usuários, total de ratings, número médio de ratings por filme e rating médio foram obtidas dos arquivos.

Por fim, algumas características gerais sobre os dados são extraídas na terceira fase. Informações de qual foi o filme mais visto (mais ratings), filme com maior rating (considerando apenas filmes com número de ratings maior que número médio de ratings por filme), gênero mais visto (mais ratings), gênero com maior rating (relação entre gênero e rating), gênero com mais filmes, gênero com mais filmes de rating 5 (mais filmes "bons"), gênero com mais filmes de rating 5 (mais filmes "bons") proporcional ao que produziu, gênero com maior desvio padrão no rating (maior heterogeneidade entre os usuários) e gêneros mais correlacionados (filmes que possuem ambos os gêneros) foram obtidas dos arquivos.

A Parte 2 referente ao Sistema de Recomendação foi feito com uma abordagem baseada em vizinhos mais próximos (para a área de aprendizado de máquina) ou busca por similaridade (para a área de recuperação de informação). O sistema foi basicamente feito da seguinte forma: foi definido um vetor de atributos para o usuário do sistema (foi utilizado o id do usuário como entrada). Este vetor foi formado pelos gêneros dos 5 filmes melhores avaliados pelo usuário. Este vetor foi considerado como o vetor de referência para a busca pelos vizinhos mais próximos. Os filmes que o usuário não assistiu foram utilizados na busca pelos vizinhos. Cada filme foi caracterizado pelo seu conjunto de gêneros binarizados. Logo, cada vetor de atributos para a análise foi definido como sendo de 20 posições, sendo a primeira com o id e o restante com os gêneros possíveis. Foi definido 0 como gênero ausente e 1 como presente. A similaridade entre o vetor do usuário e os vetores dos filmes (eliminando o id do filme na avaliação) foi calculada pela distância Euclidiana. Logo, quanto menor a distância obtida pelos vetores, maior a similaridade (mais próximo é o vizinho). Finalmente, os 10 vizinhos mais próximos são listados para o usuário do sistema de recomendação.

Algumas abordagens podem ser utilizadas na avaliação do sistema (Parte 3). Uma das métricas mais utilizadas pela área de recuperação de informação é o cálculo da precisão pela revocação. É importante não confudir esta revocação com a métrica recall em uma tarefa de classificação em aprendizado de máquina. A primeira é utilizada como referência para o cálculo da precisão: por exemplo, quando o sistema apresenta revocação x, a precisão obtida é de y. A segunda é uma métrica isolada utilizada para avaliar um sistema de classificação. A precisão e a revocação são calculadas com base na relevância dos dados recuperados. Esta relevância pode ser definida pela classe do dado recuperado (no caso deste sistema, o gênero do filme, por exemplo) ou pelo usuário do sistema. Para esta segunda estratégia, durante a execução do sistema, o usuário define se o caso recuperado foi relevante ou não para a busca dele. A vantagem da primeira abordagem de avaliação é que ela pode ser feita automaticamente pelo próprio sistema. Contudo, os casos recuperados não necessariamente podem ser relevantes para o usuário do sistema, apenas por pertencer a uma determinada classe. Já a segunda abordagem é mais complexa de ser realizada, pois depende da validação manual do usuário. Contudo, ela pode permitir uma atualização on-the-fly dos casos recuperados utilizando um módulo de feedback de relevância.

O teste foi realizado com a linguagem de programação Java, junto das APIs Apache Commons CSV, Apache Commons Math e Weka. Se a execução do código demorar muito, pode-se utilizar a versão menor do MovieLens [1, 2], que foi utilizada durante o desenvolvimento do código e os testes.

[1] https://grouplens.org/datasets/movielens/
[2] http://files.grouplens.org/datasets/movielens/ml-latest-small.zip
